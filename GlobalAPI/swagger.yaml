swagger: "2.0"
info:
  description: "Documentation for IPLeiria SmartCampus' API"
  version: "1.0.0"
  title: "IPLeiria SmartCampus"
host: "localhost"
basePath: "/api"
schemes:
- "http"
tags:
- name: "api"
  description: "Information about the API"
- name: "sensors"
  description: "Information about the sensors"
- name: "sensor_data"
  description: "Information about the readings of a sensor"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "token"
    in: "header"
    description: "The token to access to the API (generated by the DSA)"
definitions:
  ApiStatus:
    type: "object"
    properties:
      version:
        type: "string"
        example: "1.0.0"
  Sensor:
    type: "object"
    properties:
      id:
        type: "integer"
        example: "1"
      user_id:
        type: "integer"
        example: "1"
      location_id:
        type: "integer"
        example: "1"
      personal:
        type: boolean
        example: false
      valid:
        type: boolean
        example: true
      date:
        type: string
        format: "dateTime"
        example: "2019-12-02T11:29:50.00Z"
paths:
  /:
    get:
      tags:
      - "api"
      summary: "Get the API version"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/ApiStatus'
  
  /sensors:
    get:
      tags:
      - "sensors"
      security:
      - api_key: []
      summary: "Get information for all the sensors"
      produces:
      - "application/json"
      responses:
        401:
          description: "Unauthorized"
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Sensor'
  /sensors/{id}:
    get:
      tags:
      - "sensors"
      security:
      - api_key: []
      summary: "Get information for one sensor"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "id"
        description: "Sensor ID"
        required: true
        type: "integer"
      responses:
        401:
          description: "Unauthorized"
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/Sensor'
  
  /sensor_data/{id}:
    get:
      tags:
      - "sensor_data"
      security:
      - api_key: []
      summary: "Get the latest sensor data"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "id"
        description: "Sensor ID"
        required: true
        type: "integer"
      responses:
        401:
          description: "Unauthorized"
        200:
          description: "Success"
          schema:
            type: "object"
            properties:
              test:
                type: "string"
                example: "asasfhv"
            